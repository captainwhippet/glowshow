{"name":"Glowshow","tagline":"Controlling the PiGlow remotely via a simple socket server","body":"glowshow\r\n========\r\n\r\nControlling the PiGlow remotely via a simple socket server.\r\n\r\nThese simple scripts help you get a server running on the RaspberryPi. You can send commands to it from another device (e.g. PC or iPhone/iPad using Pythonista) and set patterns, the speed of change and brightness.\r\n\r\nThis is version 0.1, so a bit basic, but more will follow!\r\n\r\nPiGlow setup\r\n------------\r\n\r\nFirst of all, go to @pimoroni for details of how to get the PiGlow running: http://github.com/pimoroni/piglow\r\n\r\nRunning the server\r\n------------------\r\n\r\nOnce the PiGlow is all set up, you can run this (in the server sub directory):\r\n\r\n    python server.py\r\n\r\nThis runs the socket server running on port 13379. (Hardcoded for now.) It will sit there waiting for commands.\r\n\r\nRunning client commands\r\n-----------------------\r\n\r\nOn your other device (or the RPi itself) you can now send commands using glowclient.send_command. (See client/glowserver.py)\r\n\r\nTo set a pattern:\r\n\r\n    # Send a pattern from the client to the glowserver\r\n    host = (\"raspberrypi.home\", 13379)\r\n    pattern = [1,0,0,0,0,0, # Arm 1\r\n               1,0,0,0,0,0, # Arm 2\r\n               1,0,0,0,0,0] # Arm 3\r\n    command = { 'cmd' : 'set_pattern', 'value': pattern }\r\n    glowclient.send_command(host, command)\r\n\r\nThe pattern is mapped to the LEDs on the Pi in a way that's a bit easier to understand than the mapping in piglow.py\r\n\r\nCommand queue\r\n-------------\r\nEach command received is stored in a queue on the server side and handled in turn, so you can fire off a sequence of patterns from the client and sit back and watch them cycle through on the PiGlow.\r\n\r\nYou can control the speed of the cycle like this from the client:\r\n\r\n    # Set the speed\r\n    speed = 50\r\n    command = { 'cmd': 'set_speed', 'value' : speed }\r\n    glowclient.send_command(host, command)\r\n\r\nYou can also set the brightness:\r\n\r\n    # Set the brightness\r\n    brightness = 75\r\n    command = { 'cmd': 'set_brightness', 'value' : brightness }\r\n    glowclient.send_command(host, command)\r\n\r\nExample Script\r\n--------------\r\n\r\nPlease take a look at client/glowshow_example.py for an example of how to send commands from the client once the server is running.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}